// Copyright (C) 2016  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.


// Generated by Quartus Prime Version 16.1 (Build Build 196 10/24/2016)
// Created on Thu Mar 16 04:09:45 2017

SAT_synchronizer SAT_synchronizer_inst
(
	.ResetN_Clause(ResetN_Clause_sig) ,	// output  ResetN_Clause_sig
	.ResetN_CNF(ResetN_CNF_sig) ,	// output  ResetN_CNF_sig
	.Clause_En(Clause_En_sig) ,	// output  Clause_En_sig
	.CNF_En(CNF_En_sig) ,	// output  CNF_En_sig
	.clk(clk_sig) ,	// input  clk_sig
	.resetN(resetN_sig) ,	// input  resetN_sig
	.stateVal(stateVal_sig) 	// input [1:0] stateVal_sig
);

defparam SAT_synchronizer_inst.RESET = 'b00;
defparam SAT_synchronizer_inst.COMPUTE_CLAUSE = 'b01;
defparam SAT_synchronizer_inst.COMPUTE_CNF = 'b10;
defparam SAT_synchronizer_inst.END_CLAUSE = 'b11;
